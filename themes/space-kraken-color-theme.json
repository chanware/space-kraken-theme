{
	"name": "Space Kraken",
	"colors": {
		// === EDITOR CORE ===
		// The main coding area where you write your masterpieces
		"editor.background": "#112128",
		"editor.foreground": "#cdd3de",
		
		// === ACTIVITY BAR ===
		// The skinny vertical bar on the far left with icons (Explorer, Search, etc.)
		"activityBar.background": "#152025",
		"activityBar.foreground": "#6e8e9f",
		"activityBarBadge.background": "#82aaff", // Those little notification circles on icons
		
		// === SIDE BAR ===
		// The file explorer and other panels that slide out from the left
		"sideBar.background": "#152025",
		"sideBar.foreground": "#6e8e9f",
		"sideBarTitle.foreground": "#cdd3de", // "EXPLORER", "SEARCH", etc. headers
		"sideBarSectionHeader.background": "#1e272c", // Background for collapsible sections
		
		// === STATUS BAR ===
		// The bottom strip showing line numbers, language, Git branch, etc.
		"statusBar.background": "#1e272c",
		"statusBar.foreground": "#6e8e9f",
		"statusBar.noFolderBackground": "#1e272c", // When no folder is open
		"statusBar.debuggingBackground": "#2a4a5a", // When debugger is active
		"statusBarItem.hoverBackground": "#2e3c43", // When you hover over status items
		"statusBarItem.activeBackground": "#31424d", // When status item is clicked
		"statusBarItem.prominentBackground": "#3d5a6b", // Important items (like errors)
		"statusBarItem.prominentHoverBackground": "#4a6b7d", // Hovering over important items
		
		// === TITLE BAR ===
		// The very top bar with window controls and menu (on some platforms)
		"titleBar.activeBackground": "#1e272c",
		"titleBar.activeForeground": "#cdd3de",
		"titleBar.inactiveBackground": "#152025", // When VS Code window isn't focused
		"titleBar.inactiveForeground": "#425b67",
		
		// === EDITOR SELECTION & HIGHLIGHTS ===
		// All the ways text gets highlighted in the editor
		"editor.selectionBackground": "#31424d", // When you select text with mouse/keyboard
		"editor.lineHighlightBackground": "#0d1a21", // The line your cursor is on
		"editor.findMatchBackground": "#29353f", // The current search result
		"editor.findMatchHighlightBackground": "#252f3b", // Other search results
		"editor.wordHighlightBackground": "#252f3b", // Same word as cursor (read access)
		"editor.wordHighlightStrongBackground": "#31424d", // Same word as cursor (write access)
		
		// === CURSOR ===
		// That blinking line that shows where you're typing
		"editorCursor.foreground": "#b6c4ff",
		
		// === LINE NUMBERS ===
		// The numbers on the left side of each line
		"editorLineNumber.foreground": "#364555", // Regular line numbers
		"editorLineNumber.activeForeground": "#607d86", // Current line number
		
		// === GUTTER ===
		// The space between line numbers and your code (shows Git changes, breakpoints)
		"editorGutter.background": "#112128",
		"editorGutter.addedBackground": "#174e26", // Green bar for new lines
		"editorGutter.deletedBackground": "#80202b", // Red triangle for deleted lines
		"editorGutter.modifiedBackground": "#5a3625", // Orange bar for modified lines
		
		// === TABS ===
		// The file tabs across the top of the editor
		"tab.activeBackground": "#293c46", // Currently open file tab
		"tab.activeForeground": "#cdd3de",
		"tab.inactiveBackground": "#152025", // Background tabs
		"tab.inactiveForeground": "#6e8e9f",
		"tab.border": "#1a2d34", // Lines between tabs
		
		// === PANEL ===
		// Bottom panel area (Terminal, Problems, Output, Debug Console)
		"panel.background": "#152025",
		"panel.border": "#22343d", // Line separating panel from editor
		"panelTitle.activeForeground": "#cdd3de", // Active panel tab (like "TERMINAL")
		"panelTitle.inactiveForeground": "#6e8e9f", // Inactive panel tabs
		
		// === TERMINAL ===
		// The integrated terminal colors
		"terminal.background": "#152025",
		"terminal.foreground": "#c3cee3",
		
		// === SCROLLBARS ===
		// Those things you drag to scroll around
		"scrollbar.shadow": "#22343b00", // Shadow cast by scrollbars (transparent here)
		"scrollbarSlider.background": "#5a7380d4", // The draggable part (with transparency)
		"scrollbarSlider.hoverBackground": "#6c8795d4", // When you hover over it
		"scrollbarSlider.activeBackground": "#6c8795d4", // When you're dragging it
		
		// === BORDERS & SEPARATORS ===
		// Lines that separate different UI sections
		"border": "#22343d", // General border color
		"separator": "#3b4950", // Lines that separate sections
		
		// === NOTIFICATIONS ===
		// Those popup messages in the bottom right
		"notification.background": "#3d1a11",
		
		// === INPUT FIELDS ===
		// Text boxes where you type (search, settings, etc.)
		"input.background": "#1f2e38",
		"input.border": "#22343d",
		"input.foreground": "#cdd3de",
		
		// === BUTTONS ===
		// Clickable buttons throughout the UI
		"button.background": "#82aaff",
		"button.foreground": "#ffffff",
		"button.hoverBackground": "#85c3f4", // When you hover over buttons
		
		// === DROPDOWNS ===
		// Those menus that drop down when you click something
		"dropdown.background": "#1f2e38",
		"dropdown.border": "#22343d",
		"dropdown.foreground": "#cdd3de"
	},
	"tokenColors": [
		// === COMMENTS ===
		// All those // and /* */ things you write to explain your code
		{
			"name": "Comment",
			"scope": [
				"comment",
				"punctuation.definition.comment"
			],
			"settings": {
				"fontStyle": "italic",
				"foreground": "#4d6470"
			}
		},
		
		// === VARIABLES ===
		// Regular variables and placeholders in strings
		{
			"name": "Variables",
			"scope": [
				"variable",
				"string constant.other.placeholder"
			],
			"settings": {
				"foreground": "#cdd3de"
			}
		},
		
		// === LOCAL VARIABLES ===
		// Variables declared inside methods/functions
		{
			"name": "Local Variables",
			"scope": [
				"variable.other.local"
			],
			"settings": {
				"foreground": "#cdd3de"
			}
		},
		
		// === PARAMETERS ===
		// Those variables in parentheses when you declare methods
		{
			"name": "Parameters",
			"scope": [
				"variable.parameter"
			],
			"settings": {
				"foreground": "#fb9551"
			}
		},
		
		// === INSTANCE FIELDS ===
		// Class-level variables (the ones we just talked about!)
		{
			"name": "Instance Fields",
			"scope": [
				"variable.other.property",
				"variable.other.object.property"
			],
			"settings": {
				"foreground": "#97a0b4"
			}
		},
		
		// === GLOBAL VARIABLES ===
		// Variables that exist everywhere in your program
		{
			"name": "Global Variables",
			"scope": [
				"variable.other.global"
			],
			"settings": {
				"foreground": "#e4c16c"
			}
		},
		
		// === ERRORS ===
		// When your code is broken and VS Code is mad at you
		{
			"name": "Invalid",
			"scope": [
				"invalid",
				"invalid.illegal"
			],
			"settings": {
				"foreground": "#ff5370"
			}
		},
		
		// === KEYWORDS ===
		// Reserved words like 'public', 'class', 'int', etc.
		{
			"name": "Keywords",
			"scope": [
				"keyword",
				"storage.type",
				"storage.modifier"
			],
			"settings": {
				"foreground": "#dca9dc"
			}
		},
		
		// === CONTROL KEYWORDS ===
		// Flow control words like 'if', 'for', 'while', 'return'
		{
			"name": "Control Keywords",
			"scope": [
				"keyword.control"
			],
			"settings": {
				"foreground": "#dca9dc",
				"fontStyle": "italic"
			}
		},
		
		// === OPERATORS & PUNCTUATION ===
		// All the symbols: +, -, =, {, }, <, >, etc.
		{
			"name": "Operators, Punctuation",
			"scope": [
				"punctuation",
				"keyword.operator",
				"meta.tag",
				"punctuation.definition.tag",
				"punctuation.separator.inheritance.php",
				"punctuation.definition.tag.html",
				"punctuation.definition.tag.begin.html",
				"punctuation.definition.tag.end.html",
				"punctuation.section.embedded",
				"keyword.other.template",
				"keyword.other.substitution"
			],
			"settings": {
				"foreground": "#66c7c7"
			}
		},
		
		// === COMMAS ===
		// Just the comma character ,
		{
			"name": "Commas",
			"scope": [
				"punctuation.separator.comma"
			],
			"settings": {
				"foreground": "#89ddff"
			}
		},
		
		// === DOTS ===
		// The . character (like in object.property)
		{
			"name": "Dots",
			"scope": [
				"punctuation.accessor"
			],
			"settings": {
				"foreground": "#89ddff"
			}
		},
		
		// === SEMICOLONS ===
		// Those ; that end statements in C#
		{
			"name": "Semicolons",
			"scope": [
				"punctuation.terminator"
			],
			"settings": {
				"foreground": "#60b3b3"
			}
		},
		
		// === BRACES, BRACKETS, PARENTHESES ===
		// {}, [], () - the containers of code
		{
			"name": "Braces, Brackets, Parentheses",
			"scope": [
				"punctuation.section.braces",
				"punctuation.section.brackets",
				"punctuation.section.parens"
			],
			"settings": {
				"foreground": "#66c7c7"
			}
		},
		
		// === HTML/XML TAGS ===
		// <div>, <p>, etc. in HTML/XML files
		{
			"name": "Tag",
			"scope": [
				"entity.name.tag",
				"meta.tag.sgml",
				"markup.deleted.git_gutter"
			],
			"settings": {
				"foreground": "#f36e77"
			}
		},
		
		// === FUNCTION NAMES ===
		// When you call methods like Console.WriteLine()
		{
			"name": "Function Names",
			"scope": [
				"entity.name.function",
				"meta.function-call",
				"variable.function",
				"support.function"
			],
			"settings": {
				"foreground": "#85c3f4"
			}
		},
		
		// === METHOD CALLS ===
		// Specifically method calls on objects
		{
			"name": "Method Calls",
			"scope": [
				"entity.name.method"
			],
			"settings": {
				"foreground": "#85c3f4"
			}
		},
		
		// === STATIC METHODS ===
		// Methods you call without creating an object first
		{
			"name": "Static Methods",
			"scope": [
				"entity.name.function.static"
			],
			"settings": {
				"foreground": "#85c3f4",
				"fontStyle": "italic"
			}
		},
		
		// === NUMBERS AND CONSTANTS ===
		// Literal values like 42, true, false, null
		{
			"name": "Numbers and Constants",
			"scope": [
				"constant.numeric",
				"constant.language",
				"support.constant",
				"constant.character",
				"constant.escape",
				"keyword.other.unit",
				"keyword.other"
			],
			"settings": {
				"foreground": "#fb9551"
			}
		},
		
		// === STRINGS ===
		// Text in quotes like "Hello World"
		{
			"name": "Strings",
			"scope": [
				"string",
				"constant.other.symbol",
				"constant.other.key",
				"markup.heading",
				"markup.inserted.git_gutter"
			],
			"settings": {
				"foreground": "#99c794"
			}
		},
		
		// === STRING ESCAPES ===
		// Special characters in strings like \n, \t, \"
		{
			"name": "String Escapes",
			"scope": [
				"constant.character.escape"
			],
			"settings": {
				"foreground": "#85c3f4"
			}
		},
		
		// === CLASS NAMES ===
		// Your custom classes and built-in types like String, Int32
		{
			"name": "Class Names",
			"scope": [
				"entity.name.class",
				"entity.name.type",
				"support.type",
				"support.class"
			],
			"settings": {
				"foreground": "#e4c16c"
			}
		},
		
		// === ABSTRACT CLASSES ===
		// Classes that can't be instantiated directly
		{
			"name": "Abstract Classes",
			"scope": [
				"entity.name.type.class.abstract"
			],
			"settings": {
				"foreground": "#80cbc4"
			}
		},
		
		// === INTERFACE NAMES ===
		// Those contracts that classes implement (IDisposable, etc.)
		{
			"name": "Interface Names",
			"scope": [
				"entity.name.type.interface"
			],
			"settings": {
				"foreground": "#99c794",
				"fontStyle": "italic"
			}
		},
		
		// === TYPE PARAMETERS ===
		// Generic type placeholders like <T> in List<T>
		{
			"name": "Type Parameters",
			"scope": [
				"entity.name.type.parameter"
			],
			"settings": {
				"foreground": "#80cbc4",
				"fontStyle": "italic"
			}
		},
		
		// === ATTRIBUTES/ANNOTATIONS ===
		// Things like [Serializable] above classes/methods
		{
			"name": "Attributes/Annotations",
			"scope": [
				"entity.other.attribute-name",
				"entity.name.function.decorator"
			],
			"settings": {
				"foreground": "#dca9dc",
				"fontStyle": "italic"
			}
		},
		
		// === HTML ATTRIBUTES ===
		// class="", id="", etc. in HTML
		{
			"name": "HTML Attributes",
			"scope": [
				"text.html.basic entity.other.attribute-name.html",
				"text.html.basic entity.other.attribute-name"
			],
			"settings": {
				"fontStyle": "italic",
				"foreground": "#dca9dc"
			}
		},
		
		// === CSS CLASSES ===
		// .my-class in CSS files
		{
			"name": "CSS Classes",
			"scope": [
				"entity.other.attribute-name.class"
			],
			"settings": {
				"foreground": "#dca9dc",
				"fontStyle": "bold"
			}
		},
		
		// === CSS PROPERTIES ===
		// color:, background:, margin:, etc. in CSS
		{
			"name": "CSS Properties",
			"scope": [
				"support.type.property-name"
			],
			"settings": {
				"foreground": "#e4c16c"
			}
		},
		
		// === CSS VALUES ===
		// red, 10px, center, etc. in CSS
		{
			"name": "CSS Values",
			"scope": [
				"support.constant.property-value"
			],
			"settings": {
				"foreground": "#fb9551"
			}
		},
		
		// === GIT DIFF - INSERTED ===
		// Green lines in Git diffs (added content)
		{
			"name": "Markup - Inserted",
			"scope": [
				"markup.inserted"
			],
			"settings": {
				"foreground": "#99c794"
			}
		},
		
		// === GIT DIFF - DELETED ===
		// Red lines in Git diffs (removed content)
		{
			"name": "Markup - Deleted",
			"scope": [
				"markup.deleted"
			],
			"settings": {
				"foreground": "#f36e77"
			}
		},
		
		// === GIT DIFF - CHANGED ===
		// Modified lines in Git diffs
		{
			"name": "Markup - Changed",
			"scope": [
				"markup.changed"
			],
			"settings": {
				"foreground": "#c792ea"
			}
		},
		
		// === REGULAR EXPRESSIONS ===
		// Regex patterns like /[a-z]+/g
		{
			"name": "Regular Expressions",
			"scope": [
				"string.regexp"
			],
			"settings": {
				"foreground": "#f36e77"
			}
		},
		
		// === JSON KEYS ===
		// Property names in JSON files (the left side of "key": "value")
		{
			"name": "JSON Keys",
			"scope": [
				"support.type.property-name.json"
			],
			"settings": {
				"foreground": "#dca9dc"
			}
		},
		
		// === MARKDOWN HEADINGS ===
		// # ## ### etc. in Markdown files
		{
			"name": "Markdown Headings",
			"scope": [
				"markup.heading"
			],
			"settings": {
				"foreground": "#80cbc4",
				"fontStyle": "bold"
			}
		},
		
		// === MARKDOWN CODE ===
		// `inline code` in Markdown
		{
			"name": "Markdown Code",
			"scope": [
				"markup.inline.raw"
			],
			"settings": {
				"foreground": "#c792ea"
			}
		},
		
		// === MARKDOWN BOLD ===
		// **bold text** in Markdown
		{
			"name": "Markdown Bold",
			"scope": [
				"markup.bold"
			],
			"settings": {
				"foreground": "#f36e77",
				"fontStyle": "bold"
			}
		},
		
		// === MARKDOWN ITALIC ===
		// *italic text* in Markdown
		{
			"name": "Markdown Italic",
			"scope": [
				"markup.italic"
			],
			"settings": {
				"foreground": "#f36e77",
				"fontStyle": "italic"
			}
		},
		
		// === MARKDOWN LINKS ===
		// [link text](url) in Markdown
		{
			"name": "Markdown Links",
			"scope": [
				"markup.underline.link"
			],
			"settings": {
				"foreground": "#82aaff"
			}
		}
	]
}